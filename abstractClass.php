<?php
/**
 * File abstractClass.php
 * Created by PhpStorm.
 * User: liuzhi
 * Date: 2018/8/2
 * Time: 15:34
 */

/**
 * Class abstractClass 为包含抽象方法A，B的抽象类，其不能被直接实例化，只定义或部分实现子类需要的方法。
 * 子类可以通过继承抽象类并实现抽象类的所有抽象方法，使抽象类具体化。
 * 子类需要实例化，前提是它实现了抽象类中的所有抽象方法
 */
abstract class abstractClass
{
    abstract public function A();
    abstract protected function B();
    public function C(){
        echo "function C is not abstract.\n";
    }

    final public function D(){
        echo "function D is not abstract.\n";
    }
}

class A extends abstractClass{
    public function A()
    {
        // TODO: Implement A() method.
    }

    public function B()
    {
        // TODO: Implement B() method.
    }

    public function C()
    {
        //parent::C(); // TODO: Change the autogenerated stub
        echo "overwrite function C.\n";
    }

    public function E()
    {
        echo "function E.\n";
    }
}

abstract class B extends abstractClass
{
    public function A()
    {
        // TODO: Implement A() method.
    }

    public function C()
    {
        //parent::C(); // TODO: Change the autogenerated stub
        echo "overwrite function C.\n";
    }

}
